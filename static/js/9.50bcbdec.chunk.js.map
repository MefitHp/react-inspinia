{"version":3,"sources":["theme/copyRight.js","config.js","components/forms/renderField.js","components/forms/checkBoxField.js","components/forms/validate.js","redux/api/selectors.js","redux/api/index.js","redux/actions/user.js","components/forms/login.js","components/common/login.js","components/forms/lock.js","components/common/lock.js"],"names":["config","api","HOST","VERSION","auth","GRANT_TYPE","CLIENT_ID","CLIENT_SECRET","MAX_ATTACHMENT_SIZE","renderField","input","label","placeholder","type","fa","meta","touched","error","warning","className","CheckBoxField","e","checked","this","props","onChange","name","checkboxClass","increaseArea","onCheck","bind","cursor","Component","required","value","undefined","email","test","alphaNumeric","phoneNumber","createLoadingSelector","actions","state","_","some","action","get","createErrorMessageSelector","map","compact","first","API","url","payload","dispatch","fullUrl","headers","axios","post","qs","stringify","response","data","remember","user","login","params","actionParams","reduxForm","form","handleSubmit","pristine","submitting","invalid","onSubmit","Field","validate","component","RenderField","id","disabled","EnhancedSwitch","propTypes","PropTypes","string","Login","values","grant_type","client_id","client_secret","username","password","$","window","correctHeight","detectBody","loading","toastr","style","paddingBottom","to","alt","src","logo","nextProps","isEmpty","history","push","loadingSelector","errorSelector","withRouter","connect","bindActionCreators","errors","length","warn","warnings","Lock","submitForm","handleChange","setState","target"],"mappings":"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","file":"static/js/9.50bcbdec.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div>\n    <strong>Copyright</strong> Claytones Private Limited &copy; 2020\n  </div>\n);\n","const dev = {\n  api: {\n    HOST: 'https://localhost:446',\n    VERSION: '/api/'\n  },\n  auth: {\n    GRANT_TYPE: 'password',\n    CLIENT_ID: 'client1',\n    CLIENT_SECRET: 'secret'\n  }\n};\n\nconst prod = {\n  api: {\n    HOST: 'https://react-inspinia.free.beeceptor.com',\n    VERSION: '/api/'\n  },\n  auth: {\n    GRANT_TYPE: 'password',\n    CLIENT_ID: 'client_id',\n    CLIENT_SECRET: 'client_secret'\n  }\n};\n\nconst config = process.env.REACT_APP_STAGE === 'production' ? prod : dev;\n// const config = process.env.REACT_APP_STAGE === 'production' ? dev : prod;\n\nexport default {\n  // Add common config values here\n  MAX_ATTACHMENT_SIZE: 5000000,\n  ...config\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst renderField = ({ input, label, placeholder, type, fa, meta: { touched, error, warning } }) => {\n  return (<div>\n    {!!label && (<label>{label}</label>)}\n    <div className=\"form-group input-group m-b\">\n      {!!fa && (\n        <span className=\"input-group-addon\"><i className={fa}/></span>\n      )}\n      <input className=\"form-control\" {...input} placeholder={placeholder} type={type}/>\n    </div>\n    {touched && (\n      (error &&\n              <span className=\"error\"> {error} </span>\n      ) || (warning &&\n              <span className=\"warn\"> {warning} </span>\n      )\n    )}\n  </div>);\n};\n\nrenderField.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  fa: PropTypes.string,\n  type: PropTypes.string.isRequired\n};\n\nexport default renderField;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'react-icheck';\nimport PropTypes from 'prop-types';\n\nclass CheckBoxField extends Component {\n  onCheck(e, checked) {\n    this.props.input.onChange(checked);\n  }\n  render() {\n    return <Checkbox\n      name={this.props.input.name}\n      checkboxClass={this.props.checkboxClass}\n      increaseArea={this.props.increaseArea}\n      checked={this.props.input.checked}\n      onChange={this.onCheck.bind(this)}\n      cursor={this.props.cursor}\n      label={this.props.label}\n    />;\n  }\n}\n\nCheckBoxField.propTypes = {\n  input: PropTypes.object.isRequired,\n  checkboxClass: PropTypes.string.isRequired,\n  increaseArea: PropTypes.string.isRequired,\n  cursor: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default CheckBoxField;\n","\nexport const required = (value) => (value ? undefined : 'Required');\n\nexport const maxLength = (max) => (value) =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\n// const maxLength15 = maxLength(15)\n\nexport const minLength = (min) => (value) =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\n// export const minLength2 = minLength(2)\n\nexport const number = (value) =>\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined;\n\nexport const minValue = (min) => (value) =>\n  value && value < min ? `Must be at least ${min}` : undefined;\n// const minValue18 = minValue(18);\n\nexport const email = (value) =>\n  value && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(value) ?\n    'Invalid email address' :\n    undefined;\n\nexport const alphaNumeric = (value) =>\n  value && (/[^a-zA-Z0-9 ]/i).test(value) ?\n    'Only alphanumeric characters' :\n    undefined;\n\nexport const phoneNumber = (value) =>\n  value && !(/^(0|[1-9][0-9]{9})$/i).test(value) ?\n    'Invalid phone number, must be 10 digits' :\n    undefined;\n","import _ from 'lodash';\n\nexport const createLoadingSelector = (actions) => (state) => {\n  // returns true only when all actions is not loading\n  return _(actions).some((action) => _.get(state, `loading.${action}`));\n};\n\nexport const createErrorMessageSelector = (actions) => (state) => {\n  // returns the first error messages for actions\n  // * We assume when any request fails on a page that\n  //   requires multiple API calls, we shows the first error\n  return _(actions)\n    .map((action) => _.get(state, `error.${action}`))\n    .compact()\n    .first() || '';\n};\n","import axios from 'axios';\nimport qs from 'qs';\nimport config from '../../config';\nimport { get } from 'lodash';\nimport * as auth from '../../helpers/auth';\n\nconst { HOST, VERSION } = config.api;\n\nclass API {\n  // eslint-disable-next-line lines-around-comment\n  /**\n   * auth2 login api\n   * @param {string} url String\n   * @param {object} payload Object\n   * @param {object} action Object e.g {type: 'AUTH', dispatch: function(){} }\n   * @returns {Promise<void>} void\n   */\n  static async auth(url, payload, action) {\n    const { type, dispatch } = action;\n    try {\n      const fullUrl = HOST + VERSION + url;\n      const headers = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };\n      const response = await axios.post(fullUrl, qs.stringify(payload), headers);\n      auth.login(response.data);\n      if (payload.remember) {\n        auth.setRemember(response.data.user);\n      }\n      else {\n        auth.removeRemember();\n      }\n      dispatch({ type: `${type}_SUCCESS`, payload: response.data });\n    }\n    catch (err) {\n      let data = get(err, 'response.data', null);\n      data = !!data ? data : get(err, 'response');\n      data = !!data ? data : err;\n      dispatch({ type: `${type}_FAILURE`, payload: data });\n    }\n  }\n\n  static get(url, payload) {\n    const fullUrl = HOST + VERSION + url;\n    return axios.get(fullUrl, payload);\n  }\n\n  static post(url, payload) {\n    const fullUrl = HOST + VERSION + url;\n    return axios.post(fullUrl, payload);\n  }\n}\n\nexport default API;\n","import API from '../../redux/api';\n\nexport function login(params) {\n  return (dispatch) => {\n    const type = 'AUTH';\n    dispatch({ type: `${type}_REQUEST` });\n    const actionParams = { type, dispatch };\n    API.auth('oauth/token', params, actionParams);\n  };\n}\n","import { Field, reduxForm } from 'redux-form';\nimport React from 'react';\nimport RenderField from './renderField';\nimport PropTypes from 'prop-types';\nimport CheckBoxField from './checkBoxField';\nimport { required } from './validate';\n\nconst LoginForm = (props) => {\n  const { handleSubmit, pristine, submitting, invalid } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"Username\"\n          name=\"email\"\n          type=\"text\"\n          fa=\"fa fa-at\"\n          validate={[required]}\n          component={RenderField}\n        />\n      </div>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"******\"\n          name=\"password\"\n          type=\"password\"\n          fa=\"fa fa-key\"\n          validate={[required]}\n          component={RenderField}\n        />\n      </div>\n      <div className=\"text-left\">\n        <Field\n          name=\"remember\"\n          component={CheckBoxField}\n          type=\"checkbox\"\n          checkboxClass=\"icheckbox_square-green\"\n          increaseArea=\"20%\"\n          cursor=\"pointer\"\n          label=\"<span className='checkbox-label'> Remember Me </span>\"\n        />\n      </div>\n      <button type=\"submit\"\n        id=\"btnLogin\"\n        className=\"btn btn-primary block full-width m-b\"\n        disabled={pristine || submitting || invalid}>\n                Login\n      </button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\n\nexport default reduxForm({\n  form: 'login_form' // a unique identifier for this form\n})(LoginForm);\n","import $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { get, isEmpty } from 'lodash';\nimport { bindActionCreators } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport EnhancedSwitch from 'react-icheck/lib/EnhancedSwitch';\n\nimport '../../assets/dependencies';\nimport config from '../../config';\nimport LoginForm from '../forms/login';\nimport logo from '../../assets/img/logo.png';\nimport CopyRight from '../../theme/copyRight';\nimport Loading from '../../theme/loading';\nimport { login } from '../../redux/actions/user';\nimport * as auth from '../../helpers/auth';\nimport { correctHeight, detectBody } from '../../theme/helpers/helpers';\nimport { createLoadingSelector, createErrorMessageSelector } from '../../redux/api/selectors';\nimport { toastr } from 'react-redux-toastr';\n\nEnhancedSwitch.propTypes = {\n  ...EnhancedSwitch.propTypes,\n  cursor: PropTypes.string\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line func-names\n    $(window).bind('load resize', function() {\n      correctHeight();\n      detectBody();\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!isEmpty(get(nextProps, 'user.auth')) && auth.isAuth()) {\n      nextProps.history.push('/app/home');\n    }\n    return null;\n  }\n\n  render() {\n    if (this.props.loading) {return <Loading/>;}\n    if (this.props.error) {toastr.error('Get Hired!', this.props.error);}\n\n    return (\n      <div className=\"gray-bg\">\n        <div className=\"middle-box text-center loginscreen animated fadeInDown\" style={{ paddingBottom: '40px' }}>\n          <Link className=\"nav-link\" to=\"\">\n            <img alt=\"\" className=\"img-circle logo\" src={logo}/>\n          </Link>\n          <h3>Get Hired!</h3>\n          <p>Login in. To see it in action.</p>\n\n          <LoginForm onSubmit={this.login} />\n\n          <Link to=\"/activate\">\n            <small>Forgot Password?</small>\n          </Link>\n          <p className=\"text-muted text-center\">\n            <Link to=\"/register\">Don't have an account?</Link>\n          </p>\n          <Link className=\"btn btn-sm btn-white btn-block\" to=\"/activate\">Activate Account</Link>\n          <Link className=\"btn btn-sm btn-white btn-block\" to=\"/register\">Register</Link>\n          <br/>\n          <CopyRight/>\n        </div>\n      </div>\n    );\n  }\n\n  login = (values) => {\n    const payload = {\n      grant_type: config.auth.GRANT_TYPE,\n      client_id: config.auth.CLIENT_ID,\n      client_secret: config.auth.CLIENT_SECRET,\n      username: values.email,\n      password: values.password\n    };\n    this.props.login(payload);\n  };\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nconst loadingSelector = createLoadingSelector(['AUTH']);\nconst errorSelector = createErrorMessageSelector(['AUTH']);\n\nconst mapStoreToProps = (state) => ({ user: state.user, loading: loadingSelector(state), error: errorSelector(state) });\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ login }, dispatch);\n\nexport default withRouter(connect(mapStoreToProps, mapDispatchToProps)(Login));\n","import { Field, reduxForm } from 'redux-form';\nimport React from 'react';\nimport RenderField from './renderField';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n  else if (values.password.length < 3) {\n    errors.password = 'Must be 3 characters or more';\n  }\n\n  return errors;\n};\n\nconst warn = (values) => {\n  const warnings = {};\n  if (get(values, 'password.length', '') > 15) {\n    warnings.password = 'Hmm, you have a very strong password ...';\n  }\n  return warnings;\n};\n\nconst LockForm = (props) => {\n  const { handleSubmit, pristine, submitting, invalid } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"******\"\n          name=\"password\"\n          type=\"password\"\n          fa=\"fa fa-key\"\n          component={RenderField}\n        />\n      </div>\n      <button type=\"submit\"\n        className=\"btn btn-primary block full-width\"\n        disabled={pristine || submitting || invalid}>\n                Unlock\n      </button>\n    </form>\n  );\n};\n\nLockForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\n\nexport default reduxForm({\n  form: 'lock_form', // a unique identifier for this form\n  validate,\n  warn\n})(LockForm);\n","import $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport EnhancedSwitch from 'react-icheck/lib/EnhancedSwitch';\n\nimport { correctHeight, detectBody } from '../../theme/helpers/helpers';\nimport '../../assets/dependencies';\nimport CopyRight from '../../theme/copyRight';\nimport { login } from '../../redux/actions/user';\nimport config from '../../config';\nimport { createLoadingSelector, createErrorMessageSelector } from '../../redux/api/selectors';\nimport LockForm from '../forms/lock';\nimport Loading from './login';\nimport { toastr } from 'react-redux-toastr';\n\nEnhancedSwitch.propTypes = {\n  ...EnhancedSwitch.propTypes,\n  cursor: PropTypes.string\n};\n\nclass Lock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      email: '',\n      password: ''\n    };\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line func-names\n    $(window).bind('load resize', function() {\n      correctHeight();\n      detectBody();\n    });\n  }\n\n  render() {\n    if (this.props.loading) {return <Loading/>;}\n    if (this.props.error) {toastr.error('Get Hired!', this.props.error);}\n\n    return (\n      <div className=\"gray-bg\">\n        <div className=\"lock-word animated fadeInDown\">\n          <span className=\"first-word\">LOCKED</span><span>SCREEN</span>\n        </div>\n        <div className=\"middle-box text-center lockscreen animated fadeInDown\" style={{ paddingBottom: '40px' }}>\n          <div>\n            <div className=\"m-b-md\">\n              <img alt=\"image\" className=\"img-circle circle-border\"\n                src=\"https://s3.amazonaws.com/uifaces/faces/twitter/ok/128.jpg\" />\n            </div>\n            <h3>John Smith</h3>\n            <p>App was shut down and you need to enter your password to go back to app.</p>\n            <LockForm onSubmit={this.submitForm} />\n          </div>\n          <Link to=\"/login?refresh=true\">\n            <small>Not this account?</small>\n          </Link>\n          <br/> <br/>\n          <CopyRight/>\n        </div>\n      </div>\n    );\n  }\n\n  // submitForm = (values) => {};\n  submitForm = () => {};\n\n  login = () => {\n    const payload = {\n      grant_type: config.auth.GRANT_TYPE,\n      client_id: config.auth.CLIENT_ID,\n      client_secret: config.auth.CLIENT_SECRET,\n      username: this.state.email,\n      password: this.state.password\n    };\n    this.props.login(payload);\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n}\n\nLock.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nconst loadingSelector = createLoadingSelector(['AUTH']);\nconst errorSelector = createErrorMessageSelector(['AUTH']);\n\nconst mapStoreToProps = (state) => ({ user: state.user, loading: loadingSelector(state), error: errorSelector(state) });\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ login }, dispatch);\n\nexport default withRouter(connect(mapStoreToProps, mapDispatchToProps)(Lock));\n"],"sourceRoot":""}