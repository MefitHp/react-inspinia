{"version":3,"sources":["theme/copyRight.js","components/forms/renderField.js","components/forms/checkBoxField.js","components/forms/validate.js","components/forms/register.js","components/common/register.js"],"names":["renderField","input","label","placeholder","type","fa","meta","touched","error","warning","className","id","name","CheckBoxField","e","checked","this","props","onChange","checkboxClass","increaseArea","onCheck","bind","cursor","Component","required","value","undefined","email","test","alphaNumeric","phoneNumber","reduxForm","form","handleSubmit","pristine","submitting","invalid","onSubmit","Field","validate","component","RenderField","disabled","EnhancedSwitch","propTypes","PropTypes","string","Register","handleChange","setState","target","register","toastr","success","history","push","state","$","window","correctHeight","detectBody","style","paddingBottom","to","alt","src","logo","withRouter"],"mappings":"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","file":"static/js/13.5edb7493.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div>\n    <strong>Copyright</strong> Claytones Private Limited &copy; 2020\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst renderField = ({ input, label, placeholder, type, fa, meta: { touched, error, warning } }) => {\n  return (<div>\n    {!!label && (<label>{label}</label>)}\n    <div className=\"form-group input-group m-b\">\n      {!!fa && (\n        <span className=\"input-group-addon\">\n          <i className={fa}/>\n        </span>\n      )}\n      <input className=\"form-control\"\n             {...input}\n             placeholder={placeholder}\n             type={type}\n             id={input.name}\n      />\n    </div>\n    {touched && (\n      (error &&\n              <span className=\"error\"> {error} </span>\n      ) || (warning &&\n              <span className=\"warn\"> {warning} </span>\n      )\n    )}\n  </div>);\n};\n\nrenderField.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  fa: PropTypes.string,\n  type: PropTypes.string.isRequired\n};\n\nexport default renderField;\n","import React, { Component } from 'react';\nimport { Checkbox } from 'react-icheck';\nimport PropTypes from 'prop-types';\n\nclass CheckBoxField extends Component {\n  onCheck(e, checked) {\n    this.props.input.onChange(checked);\n  }\n  render() {\n    return <Checkbox\n      name={this.props.input.name}\n      checkboxClass={this.props.checkboxClass}\n      increaseArea={this.props.increaseArea}\n      checked={this.props.input.checked}\n      onChange={this.onCheck.bind(this)}\n      cursor={this.props.cursor}\n      label={this.props.label}\n    />;\n  }\n}\n\nCheckBoxField.propTypes = {\n  input: PropTypes.object.isRequired,\n  checkboxClass: PropTypes.string.isRequired,\n  increaseArea: PropTypes.string.isRequired,\n  cursor: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default CheckBoxField;\n","\nexport const required = (value) => (value ? undefined : 'Required');\n\nexport const maxLength = (max) => (value) =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\n// const maxLength15 = maxLength(15)\n\nexport const minLength = (min) => (value) =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\n// export const minLength2 = minLength(2)\n\nexport const number = (value) =>\n  value && isNaN(Number(value)) ? 'Must be a number' : undefined;\n\nexport const minValue = (min) => (value) =>\n  value && value < min ? `Must be at least ${min}` : undefined;\n// const minValue18 = minValue(18);\n\nexport const email = (value) =>\n  value && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(value) ?\n    'Invalid email address' :\n    undefined;\n\nexport const alphaNumeric = (value) =>\n  value && (/[^a-zA-Z0-9 ]/i).test(value) ?\n    'Only alphanumeric characters' :\n    undefined;\n\nexport const phoneNumber = (value) =>\n  value && !(/^(0|[1-9][0-9]{9})$/i).test(value) ?\n    'Invalid phone number, must be 10 digits' :\n    undefined;\n","import { Field, reduxForm } from 'redux-form';\nimport React from 'react';\nimport RenderField from './renderField';\nimport PropTypes from 'prop-types';\nimport CheckBoxField from './checkBoxField';\nimport { required, alphaNumeric, phoneNumber, email } from './validate';\n\nconst RegisterForm = (props) => {\n  const { handleSubmit, pristine, submitting, invalid } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"Name\"\n          name=\"name\"\n          type=\"text\"\n          fa=\"fa fa-user\"\n          validate={[required, alphaNumeric]}\n          component={RenderField}\n        />\n      </div>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          type=\"text\"\n          fa=\"fa fa-phone\"\n          validate={[required, phoneNumber]}\n          component={RenderField}\n        />\n      </div>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"Email\"\n          name=\"email\"\n          type=\"text\"\n          fa=\"fa fa-at\"\n          validate={[required, email]}\n          component={RenderField}\n        />\n      </div>\n      <div>\n        <Field\n          className=\"form-control\"\n          placeholder=\"******\"\n          name=\"password\"\n          type=\"password\"\n          fa=\"fa fa-key\"\n          validate={[required]}\n          component={RenderField}\n        />\n      </div>\n      <div className=\"text-left\">\n        <Field\n          name=\"agree_policy\"\n          component={CheckBoxField}\n          type=\"checkbox\"\n          checkboxClass=\"icheckbox_square-green agree-policy\"\n          increaseArea=\"20%\"\n          cursor=\"pointer\"\n          label=\"<span className='checkbox-label'> Agree Policy </span>\"\n        />\n      </div>\n      <button type=\"submit\"\n        id=\"register_button\"\n        className=\"btn btn-primary block full-width m-b\"\n        disabled={pristine || submitting || invalid}>\n                Register\n      </button>\n    </form>\n  );\n};\n\nRegisterForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\n\nexport default reduxForm({\n  form: 'register_form' // a unique identifier for this form\n})(RegisterForm);\n","import $ from 'jquery';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport EnhancedSwitch from 'react-icheck/lib/EnhancedSwitch';\nimport { correctHeight, detectBody } from '../../theme/helpers/helpers';\nimport '../../assets/dependencies';\nimport logo from '../../assets/img/logo.png';\nimport CopyRight from '../../theme/copyRight';\nimport RegisterForm from '../forms/register';\nimport { toastr } from 'react-redux-toastr';\n\nEnhancedSwitch.propTypes = {\n  ...EnhancedSwitch.propTypes,\n  cursor: PropTypes.string\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line func-names\n    $(window).bind('load resize', function() {\n      correctHeight();\n      detectBody();\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"gray-bg\">\n        <div className=\"middle-box text-center loginscreen animated fadeInDown\" style={{ paddingBottom: '40px' }}>\n          <Link className=\"nav-link\" to=\"\">\n            <img alt=\"\" className=\"img-circle logo\" src={logo}/>\n          </Link>\n          <h3>Get Hired!</h3>\n          <p>Create account to see it in action.</p>\n\n          <RegisterForm onSubmit={this.register} />\n\n          <Link to=\"/activate\">\n            <small>Activate your account?</small>\n          </Link>\n          <p className=\"text-muted text-center\">\n            <Link to=\"/login\">Already have an account?</Link>\n          </p>\n          <Link className=\"btn btn-sm btn-white btn-block\" to=\"/login\" id=\"login_button\">Login</Link>\n          <Link className=\"btn btn-sm btn-white btn-block\" to=\"/activate\">Activate Account</Link>\n          <br/>\n          <CopyRight/>\n        </div>\n      </div>\n    );\n  }\n  handleChange = (e, value) => {\n    this.setState({ [e.target.name]: value });\n  };\n  register = () => {\n    toastr.success('Get Hired!', 'Welcome to Get Hired! Please login to see magic in action');\n    this.props.history.push('/login');\n  }\n}\n\nRegister.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(Register);\n"],"sourceRoot":""}