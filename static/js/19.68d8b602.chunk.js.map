{"version":3,"sources":["theme/content.js","components/pages/permissions.js"],"names":["Content","className","this","props","children","Component","Permissions","onExpand","expandedKeys","console","log","onCheck","checkedKeys","info","handleChange","date","setState","startDate","keys","state","defaultCheckedKeys","treeData","getTreePermission","list","menu","Date","style","margin","showLine","checkable","selectable","defaultExpandAll","draggable","showIcon","selected","onChange","dateFormat","showTimeInput","placeholderText","isClearable","defaultProps","connect","teste","dispatch","bindActionCreators"],"mappings":"qLAGMA,E,iLAEF,OACE,yBAAKC,UAAU,2CACZC,KAAKC,MAAMC,c,GAJEC,aAcPL,O,0KCNTM,E,YAOF,WAAYH,GAAQ,IAAD,uBACjB,4CAAMA,KASRI,SAAW,SAACC,GACVC,QAAQC,IAAI,WAAYF,IAXP,EAanBG,QAAU,SAACC,EAAaC,GACtBJ,QAAQC,IAAI,UAAWE,EAAaC,IAdnB,EA+DnBC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,UAAWF,KA/Db,IAAMG,EAAOf,EAAMe,KAFF,OAGjB,EAAKC,MAAQ,CACXC,mBAAoBF,EACpBG,SAAUC,YAAkBC,IAAKC,MACjCP,UAAW,IAAIQ,MANA,E,sEAkBjB,OACE,6BACE,kBAAC,IAAD,KACE,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKyB,MAAO,CAAEC,OAAQ,WACpB,kBAAC,IAAD,CACE1B,UAAU,QACV2B,UAAQ,EACRC,WAAS,EACTC,YAAa,EACbC,kBAAgB,EAChBxB,SAAUL,KAAKK,SACfyB,WAAW,EACXZ,mBAAoBlB,KAAKiB,MAAMC,mBAC/BT,QAAST,KAAKS,QACdU,SAAUnB,KAAKiB,MAAME,SACrBY,UAAU,OAKlB,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,8BACb,2CACA,yBAAKA,UAAU,eACb,0BAAMA,UAAU,qBAAoB,uBAAGA,UAAU,oBACjD,kBAAC,IAAD,CACEA,UAAU,eACViC,SAAUhC,KAAKiB,MAAMF,UACrBkB,SAAUjC,KAAKY,aACfsB,WAAW,qBACXC,eAAa,EACbC,gBAAgB,yBAChBC,aAAW,c,GA5DPlC,aAApBC,EAIKkC,aAAe,CACpBtB,KAAM,IA2EGuB,6BAHS,SAACtB,GAAD,MAAY,CAAEuB,MAAOvB,EAAMuB,UACxB,SAACC,GAAD,OAAcC,YAAmB,GAAID,KAEjDF,CAA6CnC","file":"static/js/19.68d8b602.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"wrapper wrapper-content animated fadeIn\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nContent.propTypes = {\n  children: PropTypes.array.isRequired\n};\n\nexport default Content;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Tree from 'rc-tree';\nimport DatePicker from 'react-datepicker';\nimport { PropTypes } from 'prop-types';\n\nimport Content from '../../theme/content';\nimport { getTreePermission } from '../../helpers/permissions';\nimport list from '../../constants/list';\n\nclass Permissions extends Component {\n    static propTypes = {\n      keys: PropTypes.array\n    };\n    static defaultProps = {\n      keys: []\n    };\n    constructor(props) {\n      super(props);\n      const keys = props.keys;\n      this.state = {\n        defaultCheckedKeys: keys,\n        treeData: getTreePermission(list.menu),\n        startDate: new Date()\n      };\n    }\n\n    onExpand = (expandedKeys) => {\n      console.log('onExpand', expandedKeys); // eslint-disable-line no-console\n    };\n    onCheck = (checkedKeys, info) => {\n      console.log('onCheck', checkedKeys, info); // eslint-disable-line no-console\n    };\n\n    render() {\n      return (\n        <div>\n          <Content>\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <div className=\"m-t-lg\">\n                  <div style={{ margin: '0 20px' }}>\n                    <Tree\n                      className=\"myCls\"\n                      showLine\n                      checkable\n                      selectable={ false }\n                      defaultExpandAll\n                      onExpand={this.onExpand}\n                      draggable={false}\n                      defaultCheckedKeys={this.state.defaultCheckedKeys}\n                      onCheck={this.onCheck}\n                      treeData={this.state.treeData}\n                      showIcon={false}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-6\">\n                <div className=\"form-group input-group m-b\">\n                  <h3>Date Picker</h3>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-addon\"><i className=\"fa fa-calendar\"/></span>\n                    <DatePicker\n                      className=\"form-control\"\n                      selected={this.state.startDate}\n                      onChange={this.handleChange}\n                      dateFormat=\"MM/dd/yyyy h:mm aa\"\n                      showTimeInput\n                      placeholderText=\"Click to select a date\"\n                      isClearable\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Content>\n        </div>\n      );\n    }\n    handleChange = (date) => {\n      this.setState({\n        startDate: date\n      });\n    };\n}\n\nconst mapStateToProps = (state) => ({ teste: state.teste });\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Permissions);\n"],"sourceRoot":""}